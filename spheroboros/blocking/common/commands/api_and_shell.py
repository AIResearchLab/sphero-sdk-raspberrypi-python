#!/usr/bin/env python3
# This file is automatically generated!
# Source File:        0x10-api_and_shell.json
# Device ID:          0x10
# Device Name:        api_and_shell
# Timestamp:          02/08/2019 @ 00:55:35.164356 (UTC)

from spheroboros.common.commands.api_and_shell import CommandsEnum
from spheroboros.common.devices import DevicesEnum
from spheroboros.common.parameter import Parameter


def echo(self, data, target, timeout=None):
    return self._dal.send_command(
        DevicesEnum.api_and_shell,
        CommandsEnum.echo,
        target,
        timeout,
        inputs=[
            Parameter(
                name='data',
                data_type='uint8_t',
                index=0,
                value=data,
                size=16
            ),
        ],
        outputs=[
            Parameter(
                name='data',
                data_type='uint8_t',
                index=0,
                size=16,
            ),
        ],
    )


def get_api_protocol_version(self, target, timeout=None):
    return self._dal.send_command(
        DevicesEnum.api_and_shell,
        CommandsEnum.get_api_protocol_version,
        target,
        timeout,
        outputs=[
            Parameter(
                name='major_version',
                data_type='uint8_t',
                index=0,
                size=1,
            ),
            Parameter(
                name='minor_version',
                data_type='uint8_t',
                index=1,
                size=1,
            ),
        ],
    )


def send_command_to_shell(self, shell_command_string, target, timeout=None):
    return self._dal.send_command(
        DevicesEnum.api_and_shell,
        CommandsEnum.send_command_to_shell,
        target,
        timeout,
        inputs=[
            Parameter(
                name='shell_command_string',
                data_type='std::string',
                index=0,
                value=shell_command_string,
                size=1
            ),
        ],
    )


def on_send_string_to_console(self, target, handler=None, timeout=None):
    self._dal.on_command(
        DevicesEnum.api_and_shell,
        CommandsEnum.send_string_to_console,
        target,
        handler,
        timeout,
        outputs=[
            Parameter(
                name='console_string',
                data_type='std::string',
                index=0,
                size=1
            ),
        ],
    )


def get_supported_dids(self, target, timeout=None):
    return self._dal.send_command(
        DevicesEnum.api_and_shell,
        CommandsEnum.get_supported_dids,
        target,
        timeout,
        outputs=[
            Parameter(
                name='dids',
                data_type='uint8_t',
                index=0,
                size=9999,
            ),
        ],
    )


def get_supported_cids(self, did, target, timeout=None):
    return self._dal.send_command(
        DevicesEnum.api_and_shell,
        CommandsEnum.get_supported_cids,
        target,
        timeout,
        inputs=[
            Parameter(
                name='did',
                data_type='uint8_t',
                index=0,
                value=did,
                size=1
            ),
        ],
        outputs=[
            Parameter(
                name='cids',
                data_type='uint8_t',
                index=0,
                size=9999,
            ),
        ],
    )
