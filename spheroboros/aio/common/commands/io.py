#!/usr/bin/env python3
# This file is automatically generated!
# Source File:        0x1A-user_io.json
# Device ID:          0x1A
# Device Name:        io
# Timestamp:          01/23/2019 @ 18:37:41.329804 (UTC)

from spheroboros.common.commands.io import CommandsEnum
from spheroboros.common.devices import DevicesEnum
from spheroboros.common.parameter import Parameter


async def set_all_leds(self, led_group, led_brightness_values, target, timeout=None):
    return await self._dal.send_command(
        DevicesEnum.io,
        CommandsEnum.set_all_leds,
        target,
        timeout,
        inputs=[
            Parameter(
                name='led_group',
                data_type='uint16_t',
                index=0,
                value=led_group,
                size=1
            ),
            Parameter(
                name='led_brightness_values',
                data_type='uint8_t',
                index=1,
                value=led_brightness_values,
                size=16
            ),
        ],
    )


async def set_all_leds_with_32_bit_mask(self, led_group, led_brightness_values, target, timeout=None):
    return await self._dal.send_command(
        DevicesEnum.io,
        CommandsEnum.set_all_leds_with_32_bit_mask,
        target,
        timeout,
        inputs=[
            Parameter(
                name='led_group',
                data_type='uint32_t',
                index=0,
                value=led_group,
                size=1
            ),
            Parameter(
                name='led_brightness_values',
                data_type='uint8_t',
                index=1,
                value=led_brightness_values,
                size=32
            ),
        ],
    )


async def set_all_leds_with_64_bit_mask(self, led_group, led_brightness_values, target, timeout=None):
    return await self._dal.send_command(
        DevicesEnum.io,
        CommandsEnum.set_all_leds_with_64_bit_mask,
        target,
        timeout,
        inputs=[
            Parameter(
                name='led_group',
                data_type='uint64_t',
                index=0,
                value=led_group,
                size=1
            ),
            Parameter(
                name='led_brightness_values',
                data_type='uint8_t',
                index=1,
                value=led_brightness_values,
                size=64
            ),
        ],
    )


async def set_all_leds_with_8_bit_mask(self, led_group, led_brightness_values, target, timeout=None):
    return await self._dal.send_command(
        DevicesEnum.io,
        CommandsEnum.set_all_leds_with_8_bit_mask,
        target,
        timeout,
        inputs=[
            Parameter(
                name='led_group',
                data_type='uint8_t',
                index=0,
                value=led_group,
                size=1
            ),
            Parameter(
                name='led_brightness_values',
                data_type='uint8_t',
                index=1,
                value=led_brightness_values,
                size=8
            ),
        ],
    )
