#!/usr/bin/env python3
# This file is automatically generated!
# Source File:        0x1A-user_io.json
# Device ID:          0x1A
# Device Name:        io
# Timestamp:          07/02/2019 @ 22:49:01.157849 (UTC)

from sphero_sdk.common.enums.io_enums import CommandsEnum
from sphero_sdk.common.devices import DevicesEnum
from sphero_sdk.common.parameter import Parameter


def set_all_leds_with_32_bit_mask(led_group, led_brightness_values, target, timeout):
    return {
        'did': DevicesEnum.io,
        'cid': CommandsEnum.set_all_leds_with_32_bit_mask,
        'target': target,
        'timeout': timeout,
        'inputs': [
            Parameter(
                name='ledGroup',
                data_type='uint32_t',
                index=0,
                value=led_group,
                size=1
            ),
            Parameter(
                name='ledBrightnessValues',
                data_type='uint8_t',
                index=1,
                value=led_brightness_values,
                size=32
            ),
        ],
    }


def enable_usb_connection_notification(enable, target, timeout):
    return {
        'did': DevicesEnum.io,
        'cid': CommandsEnum.enable_usb_connection_notification,
        'target': target,
        'timeout': timeout,
        'inputs': [
            Parameter(
                name='enable',
                data_type='bool',
                index=0,
                value=enable,
                size=1
            ),
        ],
    }


def on_usb_connection_status_notify(target, timeout):
    return {
        'did': DevicesEnum.io,
        'cid': CommandsEnum.usb_connection_status_notify,
        'target': target,
        'timeout': timeout,
        'outputs': [
            Parameter(
                name='usbConnectionStatus',
                data_type='uint8_t',
                index=0,
                size=1,
            ),
        ]
    }


def get_usb_connection_status(target, timeout):
    return {
        'did': DevicesEnum.io,
        'cid': CommandsEnum.get_usb_connection_status,
        'target': target,
        'timeout': timeout,
        'outputs': [
            Parameter(
                name='usbConnectionStatus',
                data_type='uint8_t',
                index=0,
                size=1,
            ),
        ]
    }
