#!/usr/bin/env python3
# This file is automatically generated!
# Source File:        0x11-system_info.json
# Device ID:          0x11
# Device Name:        system_info
# Timestamp:          07/02/2019 @ 22:49:01.162859 (UTC)

from sphero_sdk.common.enums.system_info_enums import CommandsEnum
from sphero_sdk.common.devices import DevicesEnum
from sphero_sdk.common.parameter import Parameter


def get_main_application_version(target, timeout):
    return {
        'did': DevicesEnum.system_info,
        'cid': CommandsEnum.get_main_application_version,
        'target': target,
        'timeout': timeout,
        'outputs': [
            Parameter(
                name='major',
                data_type='uint16_t',
                index=0,
                size=1,
            ),
            Parameter(
                name='minor',
                data_type='uint16_t',
                index=1,
                size=1,
            ),
            Parameter(
                name='revision',
                data_type='uint16_t',
                index=2,
                size=1,
            ),
        ]
    }


def get_bootloader_version(target, timeout):
    return {
        'did': DevicesEnum.system_info,
        'cid': CommandsEnum.get_bootloader_version,
        'target': target,
        'timeout': timeout,
        'outputs': [
            Parameter(
                name='major',
                data_type='uint16_t',
                index=0,
                size=1,
            ),
            Parameter(
                name='minor',
                data_type='uint16_t',
                index=1,
                size=1,
            ),
            Parameter(
                name='revision',
                data_type='uint16_t',
                index=2,
                size=1,
            ),
        ]
    }


def get_board_revision(target, timeout):
    return {
        'did': DevicesEnum.system_info,
        'cid': CommandsEnum.get_board_revision,
        'target': target,
        'timeout': timeout,
        'outputs': [
            Parameter(
                name='revision',
                data_type='uint8_t',
                index=0,
                size=1,
            ),
        ]
    }


def get_mac_address(target, timeout):
    return {
        'did': DevicesEnum.system_info,
        'cid': CommandsEnum.get_mac_address,
        'target': target,
        'timeout': timeout,
        'outputs': [
            Parameter(
                name='macAddress',
                data_type='std::string',
                index=0,
                size=1,
            ),
        ]
    }


def get_nordic_temperature(target, timeout):
    return {
        'did': DevicesEnum.system_info,
        'cid': CommandsEnum.get_nordic_temperature,
        'target': target,
        'timeout': timeout,
        'outputs': [
            Parameter(
                name='temperature',
                data_type='int32_t',
                index=0,
                size=2,
            ),
        ]
    }


def get_stats_id(target, timeout):
    return {
        'did': DevicesEnum.system_info,
        'cid': CommandsEnum.get_stats_id,
        'target': target,
        'timeout': timeout,
        'outputs': [
            Parameter(
                name='statsId',
                data_type='uint16_t',
                index=0,
                size=1,
            ),
        ]
    }


def get_processor_name(target, timeout):
    return {
        'did': DevicesEnum.system_info,
        'cid': CommandsEnum.get_processor_name,
        'target': target,
        'timeout': timeout,
        'outputs': [
            Parameter(
                name='name',
                data_type='std::string',
                index=0,
                size=1,
            ),
        ]
    }


def get_boot_reason(target, timeout):
    return {
        'did': DevicesEnum.system_info,
        'cid': CommandsEnum.get_boot_reason,
        'target': target,
        'timeout': timeout,
        'outputs': [
            Parameter(
                name='reason',
                data_type='uint8_t',
                index=0,
                size=1,
            ),
        ]
    }


def get_last_error_info(target, timeout):
    return {
        'did': DevicesEnum.system_info,
        'cid': CommandsEnum.get_last_error_info,
        'target': target,
        'timeout': timeout,
        'outputs': [
            Parameter(
                name='fileName',
                data_type='uint8_t',
                index=0,
                size=32,
            ),
            Parameter(
                name='lineNumber',
                data_type='uint16_t',
                index=1,
                size=1,
            ),
            Parameter(
                name='data',
                data_type='uint8_t',
                index=2,
                size=12,
            ),
        ]
    }


def get_manufacturing_date(target, timeout):
    return {
        'did': DevicesEnum.system_info,
        'cid': CommandsEnum.get_manufacturing_date,
        'target': target,
        'timeout': timeout,
        'outputs': [
            Parameter(
                name='year',
                data_type='uint16_t',
                index=0,
                size=1,
            ),
            Parameter(
                name='month',
                data_type='uint8_t',
                index=1,
                size=1,
            ),
            Parameter(
                name='day',
                data_type='uint8_t',
                index=2,
                size=1,
            ),
        ]
    }


def get_sku(target, timeout):
    return {
        'did': DevicesEnum.system_info,
        'cid': CommandsEnum.get_sku,
        'target': target,
        'timeout': timeout,
        'outputs': [
            Parameter(
                name='sku',
                data_type='std::string',
                index=0,
                size=1,
            ),
        ]
    }
