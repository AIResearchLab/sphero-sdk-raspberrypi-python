#!/usr/bin/env python3
# This file is automatically generated!
# Source File:        0x18-sensors.json
# Device ID:          0x18
# Device Name:        sensor
# Timestamp:          08/21/2019 @ 17:53:39.435149 (UTC)

from enum import IntEnum


__all__ = ['CollisionDetectionMethodsEnum',
           'CliffDetectionSensorLocationsBitMask',
           'GyroMaxFlagsBitMask',
           'CollisionDetectedAxisBitMask',
           'LocatorFlagsBitMask',
           'InfraredSensorLocationsBitMask']


class CommandsEnum(IntEnum): 
    enable_gyro_max_notify = 0x0F
    gyro_max_notify = 0x10
    configure_collision_detection = 0x11
    collision_detected_notify = 0x12
    reset_locator_x_and_y = 0x13
    set_locator_flags = 0x17
    get_bot_to_bot_infrared_readings = 0x22
    get_rgbc_sensor_values = 0x23
    magnetometer_calibrate_to_north = 0x25
    magnetometer_north_yaw_notify = 0x26
    start_robot_to_robot_infrared_broadcasting = 0x27
    start_robot_to_robot_infrared_following = 0x28
    stop_robot_to_robot_infrared_broadcasting = 0x29
    robot_to_robot_infrared_message_received_notify = 0x2C
    get_ambient_light_sensor_value = 0x30
    stop_robot_to_robot_infrared_following = 0x32
    start_robot_to_robot_infrared_evading = 0x33
    stop_robot_to_robot_infrared_evading = 0x34
    enable_color_detection_notify = 0x35
    color_detection_notify = 0x36
    get_current_detected_color_reading = 0x37
    enable_color_detection = 0x38
    enable_robot_infrared_message_notify = 0x3E
    send_infrared_message = 0x3F


class CollisionDetectionMethodsEnum(IntEnum):
    ''' '''
    no_collision_detection = 0  #: 
    accelerometer_based_detection = 1  #: 
    accelerometer_based_with_extra_filtering = 2  #: 
    hybrid_accelerometer_and_control_system_detection = 3  #: 


class CliffDetectionSensorLocationsBitMask(IntEnum):
    ''' '''
    front_left = 1 #: 
    front_right = 2 #: 
    back_left = 4 #: 
    back_right = 8 #: 


class GyroMaxFlagsBitMask(IntEnum):
    ''' '''
    max_plus_x = 1 #: 
    max_minus_x = 2 #: 
    max_plus_y = 4 #: 
    max_minus_y = 8 #: 
    max_plus_z = 16 #: 
    max_minus_z = 32 #: 


class CollisionDetectedAxisBitMask(IntEnum):
    ''' '''
    x_axis = 1 #: 
    y_axis = 2 #: 


class LocatorFlagsBitMask(IntEnum):
    ''' '''
    auto_calibrate = 1 #: 


class InfraredSensorLocationsBitMask(IntEnum):
    ''' '''
    front_left = 1 #: 
    front_right = 2 #: 
    back_right = 4 #: 
    back_left = 8 #: 
